Statements:
PRINT expr[, ;]expr[, ;]...
GOTO linenum
GOSUB linenum
RETURN
END
LET var=expr
var=expr
INPUT ["prompt",]var[,var[,var...]]
REM remark
IF expr [= <> < > <= >=] expr [THEN] statement
POKE addr,value
DPOKE addr,value
USR(addr [,value [,value]])
OUT port,value
PLOT x,y
CLS

Functions (useable in expressions)
PEEK(addr)
DPEEK(addr)
USR(addr [,value [,value]])
FRE()
INP(port)
FLG(flag)
RND(range)

Variables:
A through Z 16-bit integer variables

Notes:
A space is required after line numbers

No check is done to see if line numbers are in order, lines will be compiled
in the order they exist in the source file

Multiple statements may be placed on a line, separated with a colon (:)

GOTO and GOSUB both support computed jumps.  So you could do something like 
GOTO A*1000.  If A=5 this would jump to 5000.  If the target of a computed
jump does not exist then an error will be printed and the program will be
terminated.

TBC [options] filename

-L   - show program listing
-H   - halt on errors

